// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "MoveElevatorWithJoystick.h"

MoveElevatorWithJoystick::MoveElevatorWithJoystick() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::elevator);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void MoveElevatorWithJoystick::Initialize() {
	Robot::elevator->Disable();
}

// Called repeatedly when this Command is scheduled to run
void MoveElevatorWithJoystick::Execute() {
	if (!(Robot::elevator->upperOpticGate->Get()) && Robot::oi->getJoystickOperator()->GetRawAxis(1) < 0) {
		Robot::elevator->elevatorMotor->Set(0);
	} else if (!(Robot::elevator->lowerOpticGate->Get()) && Robot::oi->getJoystickOperator()->GetRawAxis(1) > 0) {
		Robot::elevator->elevatorMotor->Set(0);
	} else {
		Robot::elevator->elevatorMotor->Set(Robot::oi->getJoystickOperator()->GetRawAxis(1) * -0.9);
	}

	if (!(Robot::elevator->lowerOpticGate->Get())) {
		Robot::elevator->elevatorEncoder->Reset();
	}

}

// Make this return true when this Command no longer needs to run execute()
bool MoveElevatorWithJoystick::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void MoveElevatorWithJoystick::End() {
	Robot::elevator->elevatorEncoder->SetPIDSourceParameter(Encoder::kDistance);
	Robot::elevator->Disable();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void MoveElevatorWithJoystick::Interrupted() {
	End();
}
