// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/AutonomousCommand0.h"
#include "Commands/AutonomousCommand1.h"
#include "Commands/AutonomousCommand2.h"
#include "Commands/AutonomousCommand3.h"
#include "Commands/CloseCanHolder.h"
#include "Commands/DriveBackward100.h"
#include "Commands/DriveBackward1000.h"
#include "Commands/DriveBackward250.h"
#include "Commands/DriveForward100.h"
#include "Commands/DriveForward1000.h"
#include "Commands/DriveForward250.h"
#include "Commands/DriveForward750.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/Eject.h"
#include "Commands/ElevatorDown.h"
#include "Commands/ElevatorDownOneLevel.h"
#include "Commands/ElevatorStop.h"
#include "Commands/ElevatorTravel.h"
#include "Commands/ElevatorUp.h"
#include "Commands/ElevatorUpOneLevel.h"
#include "Commands/FlashLED.h"
#include "Commands/MoveElevatorWithJoystick.h"
#include "Commands/MoveRollersWithJoystick.h"
#include "Commands/OpenCanHolder.h"
#include "Commands/OperatorStop.h"
#include "Commands/PickUp.h"
#include "Commands/PunchIn.h"
#include "Commands/PunchOut.h"
#include "Commands/PunchStop.h"
#include "Commands/RollersIn.h"
#include "Commands/RollersLeft.h"
#include "Commands/RollersOut.h"
#include "Commands/RollersRight.h"
#include "Commands/Turn30Clockwise.h"
#include "Commands/Turn30CounterClockwise.h"
#include "Commands/Turn45Clockwise.h"
#include "Commands/Turn45CounterClockwise.h"
#include "Commands/Turn60Clockwise.h"
#include "Commands/Turn60CounterClockwise.h"
#include "Commands/Turn90Clockwise.h"
#include "Commands/Turn90CounterClockwise.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	joystickOperator = new Joystick(1);
	
	 ButtonRightBumper = new JoystickButton(joystickOperator, 6);
	 ButtonRightBumper->WhileHeld(new RollersOut());
	buttonLeftBumper = new JoystickButton(joystickOperator, 5);
	buttonLeftBumper->WhileHeld(new RollersIn());
	buttonY = new JoystickButton(joystickOperator, 4);
	buttonY->WhileHeld(new ElevatorTravel());
	buttonX = new JoystickButton(joystickOperator, 3);
	buttonX->WhileHeld(new PunchIn());
	buttonA = new JoystickButton(joystickOperator, 1);
	buttonA->WhileHeld(new PunchOut());
	buttonB = new JoystickButton(joystickOperator, 2);
	buttonB->WhileHeld(new PunchStop());
	joystickDriver = new Joystick(0);
	
	buttonRB = new JoystickButton(joystickDriver, 6);
	buttonRB->WhenPressed(new CloseCanHolder());
	buttonLB = new JoystickButton(joystickDriver, 5);
	buttonLB->WhenPressed(new OpenCanHolder());
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Turn90CounterClockwise", new Turn90CounterClockwise());

	SmartDashboard::PutData("Turn90Clockwise", new Turn90Clockwise());

	SmartDashboard::PutData("Turn60Clockwise", new Turn60Clockwise());

	SmartDashboard::PutData("Turn60CounterClockwise", new Turn60CounterClockwise());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getJoystickOperator() {
	return joystickOperator;
}

Joystick* OI::getJoystickDriver() {
	return joystickDriver;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
