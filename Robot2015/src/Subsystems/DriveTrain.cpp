// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "DriveTrain.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "../Commands/DriveWithJoystick.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

DriveTrain::DriveTrain() : Subsystem("DriveTrain") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	rightMotor = RobotMap::driveTrainRightMotor;
	leftMotor = RobotMap::driveTrainLeftMotor;
	robotDrive = RobotMap::driveTrainRobotDrive;
	driveEncoder = RobotMap::driveTrainDriveEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


	driveGyro = RobotMap::driveTrainDriveGyro;
}
    
void DriveTrain::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new DriveWithJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void DriveTrain::ArcadeDriveWithJoystick(Joystick* joystickDriver) {
	if (Robot::oi->getJoystickDriver()->GetRawButton(4)) {
		DriveTrain::robotDrive->ArcadeDrive(joystickDriver->GetRawAxis(1) * 0.5, joystickDriver->GetRawAxis(0) * 0.5, false);
	} else {
		DriveTrain::robotDrive->ArcadeDrive(joystickDriver, false);
	}
}

void DriveTrain::TankDriveWithJoystick(Joystick* joystickDriver) {
	//DriveTrain::leftMotor->Set(joystickDriver->GetRawAxis(1) * -1);
	//DriveTrain::rightMotor->Set(joystickDriver->GetRawAxis(5));

	DriveTrain::robotDrive->TankDrive(joystickDriver->GetRawAxis(1), joystickDriver->GetRawAxis(5));
}

void DriveTrain::AutoDrive(float speed, float curve) {
	DriveTrain::robotDrive->Drive(speed, curve);

}
void DriveTrain::Stop() {
	DriveTrain::robotDrive->StopMotor();
}
