// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "PickerUpper.h"
#include "../RobotMap.h"
#include "../Commands/MoveRollersWithJoystick.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

PickerUpper::PickerUpper() : Subsystem("PickerUpper") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	leftRoller = RobotMap::pickerUpperLeftRoller;
	rightRoller = RobotMap::pickerUpperRightRoller;
	rollerDrive = RobotMap::pickerUpperRollerDrive;
	pickupIR = RobotMap::pickerUpperPickupIR;
	autoSwitch1 = RobotMap::pickerUpperAutoSwitch1;
	autoSwitch2 = RobotMap::pickerUpperAutoSwitch2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void PickerUpper::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new MoveRollersWithJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void PickerUpper::MoveWithJoystick(Joystick* joystickOperator) {
	rollerDrive->ArcadeDrive(joystickOperator->GetRawAxis(5) * -1, joystickOperator->GetRawAxis(4), false);
}

void PickerUpper::Stop() {
	rollerDrive->StopMotor();
}

bool PickerUpper::IRSensingIn() {
	return pickupIR->GetVoltage() > 2.5;
}

bool PickerUpper::IRSensingOut() {
	return pickupIR->GetVoltage() < .9;
}
